name: export-doc

on:
  release:
    types: [ created ]
env:
  REGISTRY_NAMESPACE: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    steps:

#      - name: zip directory
#        if: github.event_name == 'release' && github.event.action == 'created'
#        uses: vimtor/action-zip@v1.2
#        with:
#          files: doc/
#          dest: result.zip
#          recursive: true

      # check/see if zip is successfully created , can find on push to test
      #       - uses: actions/upload-artifact@v4
      #         with:
      #           name: my-result-zip
      #           path: ${{ github.workspace }}/result.zip


#      - name: Upload Release Asset
#        if: github.event_name == 'release' && github.event.action == 'created'
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: ${{ github.workspace }}/result.zip
#          asset_name: phrasea-doc.zip
#          tag: ${{ github.ref }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 30

      - name: Start services
        run: docker compose up -d fake-phrasea --wait

#      - name: install dependencies
#        run: |
#          docker compose exec -T fake-phrasea sh -c "cd databox/api && composer install"

      - name: export doc
        if: github.event_name == 'release' && github.event.action == 'created'
        run: |
          docker compose exec -T fake-phrasea sh -c "php databox/api/application.php app:documentation:dump"

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./databox/api/Dockerfile
          provenance: false
          push: true
          tags: |
            ${{ env.REGISTRY_NAMESPACE }}/fake-phrasea:${{ github.event.release.tag_name }}

#      - name: Trigger Workflow in documentation builder Repository
#        run: |
#          # Set the required variables
#          repo_owner="alchemy-fr"
#          repo_name="phrasea-documentation-builder"
#          event_type="trigger-workflow"
#
#          curl -L \
#            -X POST \
#            -H "Accept: application/vnd.github+json" \
#            -H "Authorization: Bearer ${{ secrets.PAT }}" \
#            -H "X-GitHub-Api-Version: 2022-11-28" \
#            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
#            -d "{\"event_type\": \"$event_type\",\"client_payload\": {\"PHRASEA_TAG\": \"${{ github.event.release.tag_name }}\"}}"
